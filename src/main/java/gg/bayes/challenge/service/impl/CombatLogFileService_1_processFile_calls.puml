@startuml

/' diagram meta data start
config=CallConfiguration;
{
  "rootMethod": "gg.bayes.challenge.service.impl.CombatLogFileService#processFile(String)",
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": true,
    "cutInterfaceStructures": true,
    "cutDataStructures": true,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 3,
    "backwardDepth": 3,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showMethodParametersTypes": false,
    "showMethodParametersNames": false,
    "showMethodReturnType": false,
    "showPackageLevels": 2,
    "showCallOrder": false,
    "edgeMode": "MethodsOnly", // TypesOnly, MethodsOnly, TypesAndMethods, MethodsAndDirectTypeUsage
    "showDetailedClassStructure": false
  },
  "rootClass": "gg.bayes.challenge.service.impl.CombatLogFileService",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="LR"
    splines=polyline
    

'nodes 
subgraph cluster_93514312 { 
   	label=bayes
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_610959299 { 
   	label=challenge
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   subgraph cluster_1266146282 { 
   	label=HeroKilledEventHandler
	labeljust=l
	fillcolor=white
	style=filled
   
   HeroKilledEventHandler206336907XXXgenerateEventEntity1572875405[
	label="+ generateEventEntity()"
	style=filled
	fillcolor=white
	tooltip="HeroKilledEventHandler

&#10;  Generate the Combat Event Entity from the raw event line of the log&#10; &#10;  @param matchEntity The match entity, this event belongs to&#10;  @param event The raw line from the log which contains the event information&#10;  @return The Created Combat Log Entry. Optional.empty incase if the event line is not honouring the expected format&#10; "
	fontcolor=darkgreen
];
} 

subgraph cluster_283044353 { 
   	label=CombatLogFileService
	labeljust=l
	fillcolor=white
	style=filled
   
   CombatLogFileService519709208XXXprocessFile1808118735[
	label="+ processFile()"
	style=filled
	fillcolor=white
	tooltip="CombatLogFileService

&#10;  Processes the file content and save the Match entity into the DB along with the combat events&#10; &#10;  @param content content of the file received&#10;  @return The saved Match Entity&#10; "
	penwidth=4
	fontcolor=darkgreen
];
} 

subgraph cluster_604648554 { 
   	label=MatchController
	labeljust=l
	fillcolor=white
	style=filled
   
   MatchController472679735XXXingestCombatLog1808118735[
	label="+ ingestCombatLog()"
	style=filled
	fillcolor=white
	tooltip="MatchController

&#10;  Ingests a DOTA combat log file, parses and persists relevant events data. All events are associated with the same&#10;  match id.&#10; &#10;  @param combatLog the content of the combat log file&#10;  @return the match id associated with the parsed events&#10; "
	fontcolor=darkgreen
];
} 

subgraph cluster_619087716 { 
   	label=DamageDoneEventHandler
	labeljust=l
	fillcolor=white
	style=filled
   
   DamageDoneEventHandler206336907XXXgenerateEventEntity1572875405[
	label="+ generateEventEntity()"
	style=filled
	fillcolor=white
	tooltip="DamageDoneEventHandler

&#10;  Generate the Combat Event Entity from the raw event line of the log&#10; &#10;  @param matchEntity The match entity, this event belongs to&#10;  @param event The raw line from the log which contains the event information&#10;  @return The Created Combat Log Entry. Optional.empty incase if the event line is not honouring the expected format&#10; "
	fontcolor=darkgreen
];
} 

subgraph cluster_696820940 { 
   	label=SpellCastEventHandler
	labeljust=l
	fillcolor=white
	style=filled
   
   SpellCastEventHandler206336907XXXgenerateEventEntity1572875405[
	label="+ generateEventEntity()"
	style=filled
	fillcolor=white
	tooltip="SpellCastEventHandler

&#10;  Generate the Combat Event Entity from the raw event line of the log&#10; &#10;  @param matchEntity The match entity, this event belongs to&#10;  @param event The raw line from the log which contains the event information&#10;  @return The Created Combat Log Entry. Optional.empty incase if the event line is not honouring the expected format&#10; "
	fontcolor=darkgreen
];
} 

subgraph cluster_856853447 { 
   	label=ItemPurchaseEventHandler
	labeljust=l
	fillcolor=white
	style=filled
   
   ItemPurchaseEventHandler206336907XXXgenerateEventEntity1572875405[
	label="+ generateEventEntity()"
	style=filled
	fillcolor=white
	tooltip="ItemPurchaseEventHandler

&#10;  Generate the Combat Event Entity from the raw event line of the log&#10; &#10;  @param matchEntity The match entity, this event belongs to&#10;  @param event The raw line from the log which contains the event information&#10;  @return The Created Combat Log Entry. Optional.empty incase if the event line is not honouring the expected format&#10; "
	fontcolor=darkgreen
];
} 
} 
} 

'edges    
CombatLogFileService519709208XXXprocessFile1808118735 -> DamageDoneEventHandler206336907XXXgenerateEventEntity1572875405;
CombatLogFileService519709208XXXprocessFile1808118735 -> HeroKilledEventHandler206336907XXXgenerateEventEntity1572875405;
CombatLogFileService519709208XXXprocessFile1808118735 -> ItemPurchaseEventHandler206336907XXXgenerateEventEntity1572875405;
CombatLogFileService519709208XXXprocessFile1808118735 -> SpellCastEventHandler206336907XXXgenerateEventEntity1572875405;
MatchController472679735XXXingestCombatLog1808118735 -> CombatLogFileService519709208XXXprocessFile1808118735;
    
}
@enduml